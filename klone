#!/usr/bin/bash
set -e -u

# load default settings from config file if exists
KLONE_CONFIG_FILE=~/.config/klone/klone.conf
if [[ -f ${KLONE_CONFIG_FILE} ]]; then
    source ${KLONE_CONFIG_FILE}
fi

# use default values, unless vars are already defined
: ${KLONE_DIR:=${KLONE_DEFAULT_DIR:-~/klone}}
: ${KLONE_SSH_REPO:=${KLONE_DEFAULT_SSH_REPO:-unknown}}
: ${KLONE_HTTPS_REPO:=${KLONE_DEFAULT_HTTPS_REPO:-unknown}}
: ${KLONE_PROTO:=ssh}

main() {
    while [[ ${1:-} == -* ]]; do
        parse_option "$@"
        shift
    done
    if [ "$#" -ne 1 ]; then
        echo 2 arguments needed
        show_help
        exit 1
    fi
    klone $1 $2
}


parse_option() {
    case $1 in
        -h|help|--help)
            show_help
            exit 0
            ;;
        --ssh)
            KLONE_PROTO=ssh
            ;;
        --https)
            KLONE_PROTO=https
            ;;
        *)  # Default case: No more options, so break out of the loop.
            show_help
            exit 1
    esac
}

show_help() {
    # show help while stripping of MarkDown ** bold markup
    sed -e 's/*//g' << EOF
Usage: ${0##*/} [options] <name> <version>

This program does a git clone of a repository to have possibly multiple version (tags/branches)
of the same repo.

Options can be:
       --ssh         git clone using ssh (the default)
       --https       git clone using https

Configuration:
If a file ~/.config/klone/klone.conf exists, this file is sourced.
This can typically be used to set the following variables:
- **KLONE_DEFAULT_DIR**
- **KLONE_DEFAULT_SSH_REPO**
- **KLONE_DEFAULT_HTTPS_REPO**
These DEFAULT vars are used to set the following vars, if they are not set.
This way the defaults in klone.conf, will not be used if these var are set
- **KLONE_DIR** : the directory in which all clones will be stored (default ~/klone )
- **KLONE_SSH_REPO** : the repository when doing a git clone using ssh protocol
- **KLONE_HTTPS_REPO** : the repository when doing a git clone using https protocol

- **KLONE_PROTO** : default protocol if not specified (default is ssh)
- **KLONE_REPO_PSW** : password that is used when git asks for a password with https checkout
EOF
}

klone_ssh() {
    NAME=$1
    VERSION=$2
    DIR=$3
    REPO=${KLONE_SSH_REPO}/${NAME}.git
    echo git clone  -c advice.detachedHead=false --branch=$VERSION -- $REPO $DIR
}

klone_https() {
    NAME=$1
    VERSION=$2
    DIR=$3
    REPO=${KLONE_HTTPS_REPO}/${NAME}.git
    SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
    export GIT_ASKPASS=${SCRIPT_DIR}/echo-klone-repo-psw.sh
    #CLONE_OPTS="--depth 1"
    echo git clone  -c advice.detachedHead=false --branch=$VERSION -- $REPO $DIR
}

klone() {
    NAME=$1
    BRANCH=$2
    DIR=${KLONE_DIR}/$NAME-$BRANCH
    CUR_DIR=`pwd`
    if [[ -d $DIR ]]; then
        cd $DIR
        echo $DIR already exists, checking if version is $BRANCH
        CUR_BRANCH=`git symbolic-ref -q --short HEAD || git describe --tags --exact-match`
        if [[ $BRANCH != $CUR_BRANCH ]]; then
            echo Current build/$1 dir is on version $CUR_BRANCH, please remove this first
            exit 1
        fi
        cd $CUR_DIR
    else
        echo cloning $DIR
        klone_$KLONE_PROTO $NAME $BRANCH $DIR
    fi
}


main "${@}"
